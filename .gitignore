# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
!frontend/lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
.next/
frontend/.next/


# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.api-env/
.env.local

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# # MLflow
# mlruns/
# .mlflow/
# mlflow-runs/

# # TensorFlow
# *.h5
# *.hdf5
# models/*.h5
# models/*.hdf5

# # Pickle files (modèles)
# *.pickle
# *.pkl
# models/*.pickle
# models/*.pkl

# Logs
*.log
logs/
log/

# Google Cloud
credentials.json
service-account-key.json
.gcloud/

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
.tmp/
.temp/

# Docker
.docker/

# Local configuration
config.local.py
settings.local.py

# Database
*.db
*.sqlite

# Cache
.cache/
.pytest_cache/

# Node.js (si présent)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Archives
*.zip
*.tar.gz
*.rar
*.7z

# Makefiles
Makefile

# Notebooks: raw data files
notebooks/data/training.1600000.processed.noemoticon.csv
notebooks/data/processed_tweets.csv
notebooks/data/sentiment140.zip

# old files and debug
.old_and_config/

# Sensitive data
secrets/
.secrets/
*.key
*.pem
*.crt
*.csr

# Local development
.local/
local/

# Local secrets (Google Cloud credentials)
.local_secrets/
*.json
!requirements*.json

# Modèles de Machine Learning
# Les modèles sont hébergés sur Google Cloud Storage (gs://air-paradis-models/)
# Plus besoin de Git LFS pour éviter les limitations de budget
models/*.h5
models/*.hdf5
models/*.pickle
models/*.pkl

# Git LFS (non utilisé)
# Garde pour historique, mais modèles maintenant sur GCS
# *.h5 filter=lfs diff=lfs merge=lfs -text
